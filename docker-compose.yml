services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432

  mongodb:
    container_name: mongo  
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - 27017:27017

  mongoExpress:
    container_name: mongoExpress  
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin 
    ports:
      - 8081:8081
    depends_on:
      - mongodb

  rabbitmq:
    container_name: rabbitmq  
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  
  auctionService:
    container_name: auctionService
    image: auction-service:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgres; Database=Auctions
      - IdentityServiceUrl=http://identityService
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq

  searchService:
    container_name: searchService
    image: search-service:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://admin:admin@mongodb
      - AuctionServiceUrl=http://auctionService
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq

  biddingService:
    container_name: biddingService
    image: bidding-service:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BiddingServiceDatabaseConnection=mongodb://admin:admin@mongodb
      - IdentityServiceUrl=http://identityService
      - GrpcAuction=http://auctionService:7777
    ports:
      - 7003:80
    depends_on:
      - mongodb
      - rabbitmq
      - auctionService
      - searchService

  notificationService:
    container_name: notificationService
    image: notification-service:latest
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
      - auctionService
      - searchService
      - biddingService
      - identityService
      - gatewayService

  identityService:
    container_name: identityService
    image: identity-service:latest
    build: 
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - IssuerUri=https://id.bookbuy.local
      - ClientApp=https://app.bookbuy.local
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgres; Database=Identity
      - VIRTUAL_HOST=id.bookbuy.local
    depends_on:
      - postgres

  gatewayService:
    container_name: gatewayService
    image: gateway-service:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApplication=https://app.bookbuy.local
      - VIRTUAL_HOST=api.bookbuy.local

  webApp:
    container_name: webApp
    image: web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    environment:
      - NEXTAUTH_SECRET="hV5asRHMxvwGfFW2+10SY+f11bYPiv9Qux9f8ypzqm8="
      - AUTH_URL=https://app.bookbuy.local
      - AUTH_URL_INTERNAL=http://webApp:3000
      - API_URL=http://gatewayService/
      - ID_URL=https://id.bookbuy.local
      - ID_URL_INTERNAL=http://identityService
      - NOTIFICATION_URL=https://api.bookbuy.local/notifications
      - VIRTUAL_HOST=app.bookbuy.local
      - VIRTUAL_PORT=3000

  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs
